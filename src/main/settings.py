"""
Django settings for edu_apt project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from django.utils.translation import gettext_lazy as _
#from django.utils.translation import ugettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# Full filesystem path to the project.
PROJECT_APP_PATH = os.path.dirname(os.path.abspath(__file__))
PROJECT_APP = os.path.basename(PROJECT_APP_PATH)
PROJECT_ROOT = BASE_DIR = os.path.dirname(PROJECT_APP_PATH)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ')9h&v4g)z!=chplp#+f@w2)cm5^t04@sobw3k3&06iw#^*-035'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

SHARED_APPS = (
	'django_tenants',  # mandatory
	'customers',  # Custom defined app that contains the TenantModel. Must NOT exist in TENANT_APPS

	'django.contrib.auth',
	'django.contrib.contenttypes',

	# everything below here is optional
	'django.contrib.sessions',
	'django.contrib.sites',
	'django.contrib.messages',
	'django.contrib.admin',
	'django.contrib.staticfiles',

	'accounts',  # Custom app that contains the new User Model. Must NOT exist in TENANT_APPS
	'bootstrapform',
	'allauth',
	'allauth.account',
	'allauth.socialaccount',

	'mptt',
	'massadmin',
	'bootstrap_datepicker_plus',
	'phonenumber_field',
	'bootstrap_modal_forms',
	'durationwidget',
)

TENANT_APPS = (
	# The following Django contrib apps must be in TENANT_APPS
	'django.contrib.auth',
	'django.contrib.contenttypes',

	'django.contrib.admin',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',

	'patient_form',
	'patient_data',

	# your tenant-specific apps
#    'avatar',
#    'userprofiles2',

	'post_office',

#    'jquery',
#    'bootstrap_themes',
#    'bootstrap_submenu',

	'crispy_forms',
#    'jsignature',
	'widget_tweaks',
#    'django_select2',
	'ajax_select',
	'selectable',

	'mptt',
	'massadmin',
	'bootstrap_datepicker_plus',
	'phonenumber_field',
	'bootstrap_modal_forms',
	'durationwidget',
)

INSTALLED_APPS = list(SHARED_APPS) + \
	[app for app in TENANT_APPS if app not in SHARED_APPS]


TENANT_MODEL = "customers.Client"  # aplp.Model
TENANT_DOMAIN_MODEL = "customers.Domain"  # app.Model

#TENANT_USERS_DOMAIN = "edapt.com"
#SESSION_COOKIE_DOMAIN = '.edapt.com'


MIDDLEWARE = [
	'django_tenants.middleware.main.TenantMainMiddleware',
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.locale.LocaleMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


AUTHENTICATION_BACKENDS = (
	# Needed to login by username in Django admin, regardless of `allauth`
	'django.contrib.auth.backends.ModelBackend',
	# `allauth` specific authentication methods, such as login by e-mail
	'allauth.account.auth_backends.AuthenticationBackend',
)

# Allauth settings
AUTH_USER_MODEL = 'accounts.PatientProfile'
AUTH_PROFILE_MODULE = 'accounts.PatientProfile'
ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS = False
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = False
ACCOUNT_EMAIL_VERIFICATION = False
LOGIN_REDIRECT_URL = 'patient_data:patientdata_list'
LOGOUT_REDIRECT_URL = 'index'
ACCOUNT_AUTHENTICATION_METHOD = 'username'
ACCOUNT_FORMS = {
	'login': 'accounts.forms.MyLoginForm',
	'signup': 'accounts.forms.MySignUpForm'
}
#ACCOUNT_SIGNUP_FORM_CLASS = 'accounts.forms.MySignUpForm'
ACCOUNT_LOGOUT_ON_GET = True
ACCOUNT_SESSION_REMEMBER = False

ROOT_URLCONF = 'main.urls_tenants'

PUBLIC_SCHEMA_URLCONF = 'main.urls_public'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [os.path.join(BASE_DIR, 'templates')],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.template.context_processors.i18n',
				'django.template.context_processors.media',
				'django.template.context_processors.static',
				'django.template.context_processors.tz',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
#    {
#        'BACKEND': 'accounts.pdf.PdftkEngine',
#        'APP_DIRS': True,
#    },
]


WSGI_APPLICATION = 'main.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
	'default': {
		'ENGINE': 'django_tenants.postgresql_backend',
		'NAME': 'heathcare',
		'USER': 'pije76',
		'PASSWORD': 'tratap60',
	}
}

DATABASE_ROUTERS = (
	'django_tenants.routers.TenantSyncRouter',
)


#PG_EXTRA_SEARCH_PATHS = ['extensions']

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

SITE_ID = 1


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
STATIC_URL = '/static/'
STATICFILES_DIRS = (
	os.path.join(BASE_DIR, "static"),
)
STATIC_ROOT = os.path.join(BASE_DIR, "assets")

MEDIA_URL = '/media/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


#AJAX_LOOKUP_CHANNELS = {
#    'fullname': {'model': 'patient_form.full_name', 'search_field': 'full_name'},
#    'fullname': ('patient_form.lookups', 'FullnameLookup'),
#}


LANGUAGES = [
    ('en', _('English')),
#    ('my', _('Malaysia')),
    ('id', _('Indonesia')),
]

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

#SOLID_I18N_USE_REDIRECTS = False

MASSEDIT = {
	'ADD_ACTION_GLOBALLY': False,
}

LOGGING = {
	'version': 1,
	'disable_existing_loggers': False,
	'filters': {
		'require_debug_false': {
			'()': 'django.utils.log.RequireDebugFalse'
		}
	},
	'handlers': {
		'mail_admins': {
			'level': 'ERROR',
			'filters': ['require_debug_false'],
			'class': 'django.utils.log.AdminEmailHandler'
		},
		'stderr': {
			'level': 'INFO',
			'class': 'logging.StreamHandler',
		},
		'file': {
			'level': 'DEBUG',
			'class': 'logging.FileHandler',
			'filename': os.path.join(BASE_DIR, "debug.log"),
		},
	},
	'loggers': {
		'django.request': {
			'handlers': ['file'],
			'level': 'DEBUG',
			'propagate': True,
		},
		'pika': {
			'handlers': ['mail_admins'],
			'level': 'ERROR',
		},
	},
	'root': {
		'handlers': ['stderr'],
		'level': 'INFO',
	},
}

# crispy form
CRISPY_TEMPLATE_PACK = 'bootstrap4'

#DATE_INPUT_FORMATS = 'd/m/Y'
DATE_INPUT_FORMATS = '%d/%m/%Y'
#DATE_INPUT_FORMATS = ['%d/%m/%y',]
#DATE_INPUT_FORMATS = 'd/m/Y'
#DATE_INPUT_FORMATS = '%d/%B/%Y'
#DATE_INPUT_FORMATS = ['%Y-%m-%d', '%m/%d/%Y', '%m/%d/%y',]

#DATE_FORMAT = 'd/m/Y'
DATE_FORMAT = '%d/%m/%Y'

TIME_INPUT_FORMATS = ('%H:%M', '%H:%i')
#TIME_INPUT_FORMATS = ['%H:%M:%S', '%H:%M:%S.%f', '%H:%M',]
DATETIME_INPUT_FORMATS = ('%m/%y', '%m/%Y', )

# Post office email
EMAIL_BACKEND = 'post_office.EmailBackend'

from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
	messages.DEBUG: 'alert-info',
	messages.INFO: 'alert-info',
	messages.SUCCESS: 'alert-success',
	messages.WARNING: 'alert-warning',
	messages.ERROR: 'alert-danger',
}

CACHES = {
	'default': {
		'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
	},
	"file_resubmit": {
		'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
		"LOCATION": os.path.join(BASE_DIR, "'cache/file_resubmit")
	},
}

# Override settings here

try:
	from .local_settings import *
except ImportError:
	pass


# Include settings from python files in subdirectory /settings.d
SETTINGS_PATH = os.path.join(PROJECT_APP_PATH, 'settings.d')

with os.scandir(SETTINGS_PATH) as it:
	for entry in it:
		if not entry.name.startswith('.') and entry.name.endswith('.py') and entry.is_file():
			# print(entry.name)
			import sys
			import imp
			module_name = "{}.{}".format(PROJECT_APP, entry.name)
			module = imp.new_module(module_name)
			module.__file__ = entry
			sys.modules[module_name] = module
			exec(open(entry, "rb").read())

if DEBUG:
	MIDDLEWARE += (
		'debug_toolbar.middleware.DebugToolbarMiddleware',
	)
	INSTALLED_APPS += (
		'debug_toolbar',
		'debug_permissions',
	)
	INTERNAL_IPS = ('127.0.0.1', )
	DEBUG_TOOLBAR_CONFIG = {
		'INTERCEPT_REDIRECTS': False,
	}
	TEMPLATES = [
		{
			'BACKEND': 'django.template.backends.django.DjangoTemplates',
			'DIRS': [os.path.join(BASE_DIR, 'templates')],
			'APP_DIRS': True,
			'OPTIONS': {
				"debug": DEBUG,
				'context_processors': [
					'django.template.context_processors.debug',
					'django.template.context_processors.request',
					'django.contrib.auth.context_processors.auth',
					'django.template.context_processors.i18n',
					'django.template.context_processors.media',
					'django.template.context_processors.static',
					'django.template.context_processors.tz',
					'django.contrib.messages.context_processors.messages',
				],
				"string_if_invalid": '<< MISSING VARIABLE "%s" >>' if DEBUG else "",
			},
		},
	#    {
	#        'BACKEND': 'accounts.pdf.PdftkEngine',
	#        'APP_DIRS': True,
	#    },
	]
